
@using CogsMinimizer.Shared
@model CogsMinimizer.Models.SubscriptionAnalyzeViewModel

@{
    ViewBag.Title = "Analyze Subscription";
}

@Styles.Render("~/Content/css")
<link href="~/Content/bootstrap-sortable.css" rel="stylesheet" />
<link href="~/Content/main.css" rel="stylesheet" />
<style>
    .btn-round {
        border-radius: 12px;
        border: none;
    }

    div {
        font-size: 14pt;
    }


    .div.top_block_panel div
    {
        padding-left : 10px;
    }


    .table.resource_table td {
        color: black;
        font-size: 14pt;
        font: regular
    }

    .btn-status {
        color: #ffffff;
        background-color: #cccccc;
        border-color: #cccccc;
    }

    .tbl-btn {
        width: 32px;
        height: 24px;
    }

    .btn-cmd {
        width: 150px;
    }

    .btn {
        margin: 3px;
    }


    .table {
        table-layout: fixed;
    }
</style>

@section Scripts
{
    <!-- all dependency scripts will be loaded here -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <!-- loading remaining scripts -->
    <script src="~/Scripts/colResizable-1.6.js"></script>
    <script src="~/Scripts/bootstrap-sortable.js"></script>

    <script>

    var initialBtnCursor;
    var initialBodyCursor;

    var statusColumn = 0;
    var nameColumn = 1;
        var descriptionColumn = 4;
        var ownerColumn = 5;
        var expirationDateColumn = 8;

        function SetCursor(bodyCursor, btnCursor) {
        $('body').css('cursor', bodyCursor);
        $('.btn').css('cursor', btnCursor);
    }

    $(document).ready(function () {
        initialBodyCursor = $('body').first().css('cursor');
        initialBtnCursor = $('.btn').first().css('cursor');

            // In addition to calling controller action buttons click will cause setting cursor to wait while being over body and buttons
           $('.wait-crs').on('click', function () { SetCursor('wait', 'wait'); });

            $('input:radio').change(function () {
                FilterResources(this);
            });

                $("[data-toggle='tooltip']").tooltip({trigger: 'hover'});

            $(".img-status").each(
                function(index, img)
                {
                    if ($(img).attr('data-status').length != 0) { SetStatusIcon(img, $(img).attr('data-status')); }
                });


     $("#resourcesTable").colResizable({
            liveDrag: true,
          gripInnerHtml: "<div class='grip'></div>",
            draggingClass: "dragging",
            resizeMode: 'fit'
     });

  });


     function SetStatusIcon(img, status)
     {
         if (status == "Valid")
         {
           $(img).attr("src", "/Images/valid.svg");
        }
         else if (status == "Expired")
        {
            $(img).attr("src", "/Images/expired.svg");
        }
         else if (status == "MarkedForDeletion")
        {
            $(img).attr("src", "/Images/delete.svg");
        }
  }

    function GetBool(colNum, value) {
        var input = $(value.elm).find("td").eq(colNum).find("input")[0];
        if (input.checked) {
    return 1;
        }
        else
        {
            return 0;
        }
    }

    function GetDescription(colNum, value) {
        var description = $(value.elm).find("td").eq(colNum).attr("title");
        return description;
}

    function GetStatus(colNum, value) {
        var status = $(value.elm).find("td").eq(colNum).attr("title");

        if (status == "Valid")
        {
            return 0;
        }
        else if (status == "Expired") {
            return 1;
        }
        else if (status == "MarkedForDeletion") {
            return 2;
        }
}

    function GetDate(colNum, value)
    {
        var dateAsString = $(value.elm).find("td").eq(colNum).html();
        var dateParts = dateAsString.split('/');
        var date = new Date(dateParts[2], dateParts[0], dateParts[1]);
        return date;
    }

    function SortResources(th) {

        if ($('#resourcesTable tbody tr').length == 0)
        {
            return;
        }

        var order = "asc";
        if ($(th).hasClass("down")) {
            order = "desc";
        }

        var colNum = $(th).index();
        var selector = "td:nth-child(" + (colNum + 1) + ")";

        var sortKind = "Text";
        if ($(th).attr("data-defaultsign") == "month") {
            sortKind = "Date";
        }
        else if ($(th).attr("data-defaultsign") == "bool") {
            sortKind = "bool";
        }
        else if ($(th).attr("data-defaultsign") == "status") {
            sortKind = "status";
        }

        if (sortKind == "Date") {
            tinysort($('#resourcesTable tbody tr'), {
                order: order, selector: selector, sortFunction: function (a, b) {
                    return GetDate(colNum, a) - GetDate(colNum, b);
                }
            });
        }
        else if (sortKind == "bool") {
            tinysort($('#resourcesTable tbody tr'), {
                order: order, selector: selector, sortFunction: function (a, b) {
                    return GetBool(colNum, a) - GetBool(colNum, b);
                }
            });
        }
        else if (sortKind == "description") {
            tinysort($('#resourcesTable tbody tr'), {
                order: order, selector: selector, sortFunction: function (a, b) {
                    return GetDescription(colNum, a) - GetDescription(colNum, b);
                }
                });
        }
        else if (sortKind == "status") {
            tinysort($('#resourcesTable tbody tr'), {
                order: order, selector: selector, sortFunction: function (a, b) {
                    return GetStatus(colNum, a) - GetStatus(colNum, b);
                }
            });
        }
        else {
            tinysort($('#resourcesTable tbody tr'), { order: order, selector: selector });
        }
    }

    function RedrawResourceTable() {
        if ($('#allResourcesRadio').is(":checked"))
        {
            FilterResources($('#allResourcesRadio'));
        }
        else if ($('#yourResourcesRadio').is(":checked"))
        {
            FilterResources($('#yourResourcesRadio'));
        }
        else if ($('#unclaimedResourcesRadio').is(":checked"))
        {
            FilterResources($('#unclaimedResourcesRadio'));
        }
    }

    function IsStatusShown(resourceRow)
    {
        var status = $(resourceRow).find('td').eq(statusColumn).attr('title');
        if (status == "Valid")
        {
            return $('#showValidResourcesCheckBox').is(':checked');
        }
        else if (status == "Expired")
        {
            return $('#showExpiredResourcesCheckBox').is(':checked');
        }
        else if (status == "MarkedForDeletion") {
            return $('#showDeletedResourcesCheckBox').is(':checked');
        }
    }

    function FilterResources(radioBtn) {
        if ($(radioBtn).attr('id') == 'allResourcesRadio')
        {
            $('#resourcesTable').find('tr').each(function () {
                // skip table header
                if ($(this).find('th').length != 0) {
                    return;
                }

                if (IsStatusShown(this))
                {
                    $(this).show();
                }
                else
                {
                    $(this).hide();
                }
            });
        }
        else if ($(radioBtn).attr('id') == 'yourResourcesRadio')
        {
            var currentUser = $.trim(@Html.Raw(Json.Encode(ViewData["UserId"])));
            $('#resourcesTable').find('tr').each(function ()
            {
                // skip table header
                if ($(this).find('th').length != 0) {
                    return;
                }

                var resourceOwner = $.trim($(this).find('td').eq(ownerColumn).html());
                if (resourceOwner == currentUser)
                {
                    if (IsStatusShown(this)) {
                        $(this).show();
                    }
                    else
                    {
                        $(this).hide();
                    }
                }
                else
                {
                    $(this).hide();
                }
            });
        }
        else if ($(radioBtn).attr('id') == 'unclaimedResourcesRadio') {
            $('#resourcesTable tr').each(function () {
                // skip table header
                if ($(this).find('th').length != 0) {
                    return;
                }

                var confirmedUser = $(this).find('td #item_ConfirmedOwner').is(':checked');
                if (confirmedUser)
                {
                   $(this).hide();
                }
                else
                {
                    if (IsStatusShown(this)) {
                        $(this).show();
                    }
                    else
                    {
                        $(this).hide();

                    }
                }
            });
        }
    }

    function OnEditSettings()
    {
            SetCursor('wait', 'wait');
        $.ajax({
            url: "/Subscription/GetSettings",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                Id: "@Model.SubscriptionData.Id",
                OrganizationId: "@Model.SubscriptionData.OrganizationId",
                DisplayName: "@Model.SubscriptionData.DisplayName"
            }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                window.location.href = data.redirectUrl;
            }
        });
    }

    function OnGetDeleteResourcesScript() {
        SetCursor('wait', 'wait');
    $.ajax({
        url: "/Subscription/GetResourcesMarkedForDelete",
        type: "POST",
        dataType: "json",
        data: JSON.stringify({
        SubscriptionId: "@Model.SubscriptionData.Id"
        }),


        contentType: "application/json; charset=utf-8",
        success: function (data) {
                            SetCursor(initialBodyCursor, initialBtnCursor);

            var content = 'Write-host  \'Running this script will permanently delete all the resources in the subscription that have been identified as obsolete using SubMinimizer. Subscription name: \\\'@Model.SubscriptionData.DisplayName\\\', Subscription id: \\\'@Model.SubscriptionData.Id\\\'.\'\n';
            content += 'Write-host  \'' + data.length + ' resources will be deleted\'\n';
            content += 'Write-host  \'Are you sure? y/n\'\n';
            content += '$confirm = Read-Host\n';
           content += 'if ($confirm -ne \'y\')\n' +
    '{\n' +  'return\n' +
    '}\n' +
'Connect-AzureRmAccount\n' +
    'Set-AzureRmContext -Subscription \'@Model.SubscriptionData.Id\'\n';

    for (var resNum = 0; resNum < data.length; resNum++)
    {
        var resource = data[resNum];


      var delResTemplate = 'Write-Host \'Deleting resource "{0}" from group "{1}"\'\n';
      content += delResTemplate.replace('{0}', resource.Name).replace('{1}', resource.Group);


      if (resource.ConfirmedOwner)
         {
          var claimResTemplate = 'Write-Host \'Last claimed "{0}"\'\n';
          content += claimResTemplate.replace('{0}', resource.Owner);
        }
        else
        {
           content += 'Write-Host \'Unclaimed\'\n';
        }

        var remResTemplate = 'Remove-AzureRmResource -Force -ResourceId \'{0}\'\n';
        content += remResTemplate.replace('{0}', resource.AzureId);
}

   var today = new Date();
           var dd = String(today.getDate()).padStart(2, '0');
           var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
          var yyyy = today.getFullYear();
            var hh = today.getHours();
            var min = today.getMinutes();

            var todayString = mm + '-' + dd + '-' + yyyy + ':' + hh + '.' + min;

           var fileName = 'DeleteObsoleteResource_' + '@Model.SubscriptionData.DisplayName' + '_' + todayString + '_.ps1';

           var blob = new Blob([content],
        {
           type: "text/plain;charset=utf-8",       });

           var link = document.createElement("a");
           link.href = window.URL.createObjectURL(blob);
           link.download = fileName;
           link.click();

}
    });
}

    function ResourceGroupOp(opName) {
        var selectedGroup = $('#groupList').val();
        if (selectedGroup == '') {
            alert("Please select resource group");
            return;
        }

        SetCursor('wait', 'wait');
        $.ajax({
            url: "/Subscription/ResourceGroupOperation",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                Operation: opName,
                Group: selectedGroup,
                SubscriptionId: "@Model.SubscriptionData.Id"
            }),

            contentType: "application/json; charset=utf-8",
            success: function (data) {
                for (var resNum = 0; resNum < data.length; resNum++) {
                    var resource = data[resNum];
                    // let's find resource raw in resource table in order to update appropriate values
                    var rowSelector = "#resourcesTable tr[data-resource-id='" + resource.Id + "']";
                    var resourceRow = $(rowSelector).first();
                    if (resourceRow != null) {
                        if (resource.ConfirmedOwner) {
                            $(resourceRow).find('#item_ConfirmedOwner').prop('checked', 'checked');
                        }
                        else {
                            $(resourceRow).find('#item_ConfirmedOwner').prop('checked', '');
                        }

                        $(resourceRow).find('td').eq(ownerColumn).html(resource.Owner);
                        $(resourceRow).find('td').eq(ownerColumn).attr("title", resource.Owner);

                        $(resourceRow).find('td').eq(expirationDateColumn).html(resource.ExpirationDate);
                        $(resourceRow).find('td').eq(expirationDateColumn).attr("title", resource.ExpirationDate);

                        SetStatusIcon($(resourceRow).find('td').eq(statusColumn).find("img"), resource.Status);
                        $(resourceRow).find('td').eq(statusColumn).attr("title", resource.Status);
                    }
                }

                RedrawResourceTable();
                SetCursor(initialBodyCursor, initialBtnCursor);

            }
        });


    }


    function OnResetResources() {
        $('#resetRessConfDialog').modal('show');
    }

    function OnResetResourcesImpl() {
            SetCursor('wait', 'wait');
            $('#resetRessConfDialog').modal('hide');
            $.ajax({
                url: "/Subscription/ResetResources",
                type: "POST",
                dataType: "json",
                data: JSON.stringify({
                    SubscriptionId: '@Model.SubscriptionData.Id'
                }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    for (var resNum = 0; resNum < data.length; resNum++) {
                        var resource = data[resNum];
                        // let's find resource raw in resource table in order to update appropriate values
                        var rowSelector = "#resourcesTable tr[data-resource-id='" + resource.Id + "']";
                        var resourceRow = $(rowSelector).first();
                        if (resourceRow != null) {
                            if (resource.ConfirmedOwner) {
                                $(resourceRow).find('#item_ConfirmedOwner').prop('checked', 'checked');
                            }
                            else {
                                $(resourceRow).find('#item_ConfirmedOwner').prop('checked', '');
                            }

                            $(resourceRow).find('td').eq(ownerColumn).html(resource.Owner);
                            $(resourceRow).find('td').eq(ownerColumn).attr("title", resource.Owner);

                            $(resourceRow).find('td').eq(expirationDateColumn).html(resource.ExpirationDate);
                            $(resourceRow).find('td').eq(expirationDateColumn).attr("title", resource.ExpirationDate);

                            SetStatusIcon($(resourceRow).find('td').eq(statusColumn).find("img"), resource.Status);
                            $(resourceRow).find('td').eq(statusColumn).attr("title", resource.Status);
                        }
                    }

                    RedrawResourceTable();
                    SetCursor(initialBodyCursor, initialBtnCursor);
                }
            });
        }

            function OnEditDescription(editBtn, resID, subscrID) {
            $(editBtn).tooltip('hide');

            var selectedRow = $(editBtn).parents("tr");
            var resourceId = $(selectedRow).attr("data-resource-id");
            var resourceName = $(selectedRow).find("td").eq(nameColumn).find("a").text();
            // multi line value is padded by spaces at beginning/ending. let's trim it
            var resourceDescription = $.trim($(selectedRow).find("td").eq(descriptionColumn).attr("title"));

            $('#resourceId').html(resourceId);
            $('#resourceName').html(resourceName);
            $('#resourceDescription').val(resourceDescription);
            $('#descriptionDialog').modal('show');
        }

        function OnSaveDescription()
        {
            SetCursor('wait', 'wait');

            var resourceId = $('#resourceId').html();
            var resourceDescription = $('#resourceDescription').val();
            $.ajax({
                url: "/Subscription/SaveResourceDescription",
                type: "POST",
                dataType: "json",
                data: JSON.stringify({
                    SubscriptionId: '@Model.SubscriptionData.Id',
                    ResourceId: resourceId,
                    Description: resourceDescription
                }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    // let's find resource raw in resource table in order to update appropriate values
                    var rowSelector = "#resourcesTable tr[data-resource-id='" + resourceId + "']";
                    var resourceRow = $(rowSelector).first();
                    if (resourceRow != null) {

                   $(resourceRow).find('td').eq(descriptionColumn).find("#descrTxt").html(data.Description);
                   $(resourceRow).find('td').eq(descriptionColumn).attr("title", data.Description);
                    }

                    $('#descriptionDialog').modal('hide');
                    SetCursor(initialBodyCursor, initialBtnCursor);
                }
            });
            }

    function OnResetResource(resetBtn, resID, subscrID) {
        SetCursor('wait', 'wait');
        $(resetBtn).tooltip('hide');
        // meanwhile somehow previous row button is disabled. so we allow repetitive operations
        //        $(resetBtn).prop('disabled', 'disabled');
        var selectedRow = $(resetBtn).parents("tr");
        $.ajax({
            url: "/Subscription/ResetResource",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ResourceId: resID,
                SubscriptionId: subscrID
            }),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                // Let's update expiration date, validity status, resource owner
                // Model at server is updated at controller method and will be used for table complete updating at refresh table

                if (data.ConfirmedOwner) {

                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', 'checked');
                }
                else {
                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', '');
                }

                    $(selectedRow).find('td').eq(ownerColumn).html(data.Owner);
                    $(selectedRow).find('td').eq(ownerColumn).attr("title", data.Owner);
                    $(selectedRow).find('td').eq(expirationDateColumn).html(data.ExpirationDate);
                    $(selectedRow).find('td').eq(expirationDateColumn).attr("title", data.ExpirationDate);

                    SetStatusIcon($(selectedRow).find('td').eq(statusColumn).find("img"), data.Status);
                    $(selectedRow).find('td').eq(statusColumn).attr("title", data.Status);
                    RedrawResourceTable();
                SetCursor(initialBodyCursor, initialBtnCursor);
            }
        });
    }

    function OnReserveResource(reserveBtn, resID, subscrID) {
        $(reserveBtn).tooltip('hide');
        // meanwhile somehow previous row button is disabled. so we allow repetitive operations
        //        $(reserveBtn).prop('disabled', 'disabled');
        SetCursor('wait', 'wait');
        var selectedRow = $(reserveBtn).parents("tr");
        $.ajax({
            url: "/Subscription/ReserveResource",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ResourceId: resID,
                SubscriptionId: subscrID
            }),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                // Let's update expiration date, validity status, resource owner
                // Model at server is updated at controller method and will be used for table complete updating at refresh table

                if (data.ConfirmedOwner) {
                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', 'checked');
                }
                else
                {
                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', '');
                }

                $(selectedRow).find('td').eq(ownerColumn).html(data.Owner);
                $(selectedRow).find('td').eq(ownerColumn).attr("title", data.Owner);
                $(selectedRow).find('td').eq(expirationDateColumn).html(data.ExpirationDate);
                $(selectedRow).find('td').eq(expirationDateColumn).attr("title", data.ExpirationDate);

                SetStatusIcon($(selectedRow).find('td').eq(statusColumn).find("img"), data.Status);
                $(selectedRow).find('td').eq(statusColumn).attr("title", data.Status);

                RedrawResourceTable();
                SetCursor(initialBodyCursor, initialBtnCursor);
            }
        });
    }

    function OnExtendResource(extendBtn, resID, subscrID) {
        $(extendBtn).tooltip('hide');
// meanwhile somehow previous row button is disabled. so we allow repetitive operations
//        $(extendBtn).prop('disabled', 'disabled');
        SetCursor('wait', 'wait');
        var selectedRow = $(extendBtn).parents("tr");
        $.ajax({
           url: "/Subscription/ExtendResource",
            type: "POST",
            dataType: "json",
            data: JSON.stringify({
                ResourceId: resID,
                SubscriptionId: subscrID
            }),
            contentType: "application/json; charset=utf-8",
            success: function(data) {
                // Let's update expiration date, validity status, resource owner
                // Model at server is updated at controller method and will be used for table complete updating at refresh table
                if (data.ConfirmedOwner) {
                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', 'checked');
                }
                else {
                    $(selectedRow).find('#item_ConfirmedOwner').prop('checked', '');
                }


                $(selectedRow).find('td').eq(ownerColumn).html(data.Owner);
                $(selectedRow).find('td').eq(ownerColumn).attr("title", data.Owner);
                $(selectedRow).find('td').eq(expirationDateColumn).html(data.ExpirationDate);
                $(selectedRow).find('td').eq(expirationDateColumn).attr("title", data.ExpirationDate);

                SetStatusIcon($(selectedRow).find('td').eq(statusColumn).find("img"), data.Status);
                $(selectedRow).find('td').eq(statusColumn).attr("title", data.Status);

                RedrawResourceTable();

                SetCursor(initialBodyCursor, initialBtnCursor);
            }
        });
    }.
    </script>
}

<h2>Subscription Resources</h2>

<br />

<div class="panel panel-default" style="border:none;width:1440px">
    <div class="row" style="height:40px" />
    <div class="row">
        <div class="col-md-6 pull-left" style="width:700px;vertical-align:top;align-self:start"><span style="font-size:18pt;font-weight:bold">Subscription name:</span><span style="font-size:18pt">@Model.SubscriptionData.DisplayName</span></div>
        <div class="col-md-6 pull-left" style="width:140px">
            <a style="color:#252423;text-decoration:none;font-size:14pt;" href="/Subscription/GetSettings/@Model.SubscriptionData.Id?OrganizationId=@Model.SubscriptionData.OrganizationId?DisplayName=@Model.SubscriptionData.DisplayName"><span"><img src="/Images/settings.svg" /></span><span style="text-decoration: none;padding-left:10px; vertical-align: central">Settings</span></a>

        </div>
        <div class="col-md-6 pull-left" style="width:350px">
            <a style="font-size:14pt;color:#252423;text-decoration:none" onclick="OnGetDeleteResourcesScript()"><span"><img src="/Images/download.svg" /></span><span style="text-decoration:none;padding-left:10px;vertical-align:central">Download delete resources script</span></a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 pull-left" style="width:700px;vertical-align:top;align-self:start"><span style="font-size: 18pt; font-weight: bold">Subscription id:</span> <span style="font-size: 18pt">@Model.SubscriptionData.Id</span></div>
        @if (@Model.SubscriptionData.ConnectedBy == @User.Identity.Name)
        {
            <div class="col-md-6 pull-left" style="width:200px">
                <a style="font-size: 14pt; color: #252423; text-decoration: none" onclick="OnResetResources()"> <span><img src="/Images/reset.svg" /></span><span style="text-decoration: none;padding-left:10px; vertical-align: central">Reset resources</span></a>
            </div>
        }
    </div>

    <!--  Legends, Sort, Group ops -->
    <div class="row">
        <div class="col-md-6 pull-left" style="width:290px;padding:0px;">
            <div class="panel panel-default top_block_panel">
                <div style="background-color : #f5f5f5;text-align: left;font-weight: bold;font-size: 14pt;" class="hdr panel-heading">Choose resources to view</div>
                <div class="panel-body">
                    <div style="align-content:center" class="row">
                        <span style="width:50px"></span>@Html.RadioButton("resource filter", "All resources", true, new { id = "allResourcesRadio", style = "margin-left:15px" }) All resources
                    </div>
                    <div class="row" style="align-content:center">
                        <span style="width:50px"></span>@Html.RadioButton("resource filter", "My resources", false, new { id = "yourResourcesRadio", style = "margin-left:15px" }) My resources
                    </div>
                    <div class="row" style="align-content:center">
                        <span style="width:50px"></span>@Html.RadioButton("resource filter", "Unclaimed resources", false, new { id = "unclaimedResourcesRadio", style = "margin-left:15px" }) Unclaimed resources
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 pull-left" style="width:350px;padding:0px;">
            <div class="panel panel-default">
                <div style="text-align: left;font-weight: bold;font-size: 14pt;" class="panel-heading">Extend all resources in group</div>
                <div class="panel-body">
                    <div class="row" style="align-content:center;">
                        @Html.DropDownList("groupList", Model.GroupList, "Select resource group", new { style = "margin-left:15px;" })
                    </div>
                    <div style="align-content:center" class="row">
                        <button onclick="ResourceGroupOp('extend')" style="margin-left:15px" class="btn btn-xs tbl-btn">
                            <img src="~/Images/extend.svg" />
                        </button>&nbsp;Extend resources
                    </div>.
                    <div class="row" style="align-content:center">
                        <button onclick="ResourceGroupOp('reserve')" style="margin-left:15px" class="btn btn-xs glyphicon tbl-btn">
                            <img src="~/Images/reserve.svg" />
                        </button>&nbsp;Reserve resources
                    </div>

                </div>
            </div>

        </div>

        <div class="col-md-6 pull-left" style="width:350px;padding:0px;">
            <div class="panel panel-default">
                <div style="text-align: left;font-weight: bold;font-size: 14pt;" class="panel-heading">Status Legend (check to view)</div>
                <div class="panel-body">
                    <div class="row">
                        <input id="showValidResourcesCheckBox" onchange="RedrawResourceTable()" style="margin-left:15px;vertical-align:middle" type="checkbox" checked="checked" /><button style="margin-left:20px" class="btn btn-xs glyphicon tbl-btn" data-status=""><img src="~/Images/valid.svg" /></button>&nbsp;Valid
                    </div>
                    <div class="row">
                        <input id="showExpiredResourcesCheckBox" onchange="RedrawResourceTable()" style="margin-left:15px;vertical-align:middle" type="checkbox" checked="checked" /><button style="margin-left:20px" class="btn btn-xs glyphicon tbl-btn" data-status=""><img src="~/Images/expired.svg" /></button>&nbsp;Expired
                    </div>
                    <div class="row">
                        <input id="showDeletedResourcesCheckBox" onchange="RedrawResourceTable()" style="margin-left:15px;vertical-align:middle" type="checkbox" checked="checked" /><button style="margin-left:20px" class="btn btn-xs glyphicon tbl-btn" data-status=""><img src="~/Images/delete.svg" /></button>&nbsp;Marked for deletion
                    </div>
                </div>
            </div>

        </div>

        <div class="col-md-6 pull-left" style="width:350px;padding:0px;">
            <div class="panel panel-default">
                <div style="font-weight: bold; font-size: 14pt;text-align: left" class="panel-heading">Actions Legend</div>
                <div class="panel-body">

                    <div style="align-content:center" class="row">
                        <button style="margin-left:15px" class="btn disabled btn-xs glyphicon tbl-btn">
                            <img src="~/Images/edit.svg" />
                        </button>&nbsp;Edit resource description
                    </div>
                    <div style="align-content:center" class="row">
                        <button style="margin-left:15px" class="btn disabled btn-xs glyphicon tbl-btn">
                            <img src="~/Images/extend.svg" />
                        </button>&nbsp;Extend resource
                    </div>
                    <div class="row">
                        <button style="margin-left:15px" class="btn disabled btn-xs glyphicon tbl-btn">
                            <img src="~/Images/reserve.svg" />
                        </button>&nbsp;Reserve resource
                    </div>
                    <div class="row">
                        <button style="margin-left:15px" class="btn disabled btn-xs  tbl-btn">
                            <img src="~/Images/extend.svg" />
                        </button>&nbsp;Reset resource
                    </div>

                </div>
            </div>

        </div>
    </div>
    </div>
    <!--    <div class="row">-->
    <table class="resource_table table table-hover table-bordered table-striped table-condensed sortable resizable" id="resourcesTable">
        <thead>
            <tr>
                <th width="54px" data-defaultsign="status" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().Status)
                </th>
                <th width="280px" id="nameColumn" data-defaultsign="AZ" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().Name)
                </th>

                <th width="280px" data-defaultsign="AZ" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().Type)
                </th>
                <th width="160px" data-defaultsign="AZ" onclick="SortResources(this)">Resource<br />Group</th>
                <th width="160px" data-defaultsign="description" onclick="SortResources(this)" style="border-right:0px">
                    @Html.DisplayNameFor(model => model.Resources.First().Description)
                </th>

                <th width="160px" data-defaultsign="AZ" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().Owner)
                </th>
                <th width="54px" id="confirmedOwnerColumn" data-defaultsign="bool" onclick="SortResources(this)">
                    Claimed
                </th>
                <th width="90px" data-defaultsign="month" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().FirstFoundDate)
                </th>
                <th width="90px" data-defaultsign="month" onclick="SortResources(this)">
                    @Html.DisplayNameFor(model => model.Resources.First().ExpirationDate)
                </th>
                <th width="90px" data-defaultsort="disabled">
                    Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Resources)
            {
                string rowClass = item.Expired ? "alert alert - warning" : null;
                <tr class="@rowClass" data-resource-id="@item.Id">
                    <td title="@item.Status" style="text-align:center;ellipsis;overflow:hidden;white-space:nowrap">
                        <img src="~/Images/valid.svg" />
                    </td>
                    <td title="@item.AzureResourceIdentifier" style="color:#0078d4;text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.Raw(HTMLUtilities.CreateAzureResourceAnchor(item.Name, item.AzureResourceIdentifier))
                    </td>
                    <td title="@item.Type" style="text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td title="@item.ResourceGroup" style="text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.DisplayFor(modelItem => item.ResourceGroup)
                    </td>
                    <td title="@item.Description" style="border-right:0px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        <div id="descrTxt">
                            @Html.DisplayFor(modelItem => item.Description)
                        </div>
                        <div>
                            <button class="btn btn-xs glyphicon tbl-btn" data-toggle="tooltip" title="Edit resource description" style="height:24px;width:32px"
                                    onclick="OnEditDescription(this, '@item.Id', '@item.SubscriptionId')">
                                <img src="~/Images/edit.svg" />
                            </button>
                        </div>
                    </td>
                    <td title="@item.Owner" style="text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.DisplayFor(modelItem => item.Owner)
                    </td>
                    <td style="text-align:center">
                        @Html.CheckBoxFor(modelItem => item.ConfirmedOwner, new { disabled = "disabled" })
                    </td>
                    <td title="@item.FirstFoundDate" style="text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.DisplayFor(modelItem => item.FirstFoundDate)
                    </td>
                    <td title="@item.ExpirationDate" style="text-overflow:ellipsis;overflow:hidden;white-space:nowrap">
                        @Html.DisplayFor(modelItem => item.ExpirationDate)
                    </td>
                    <td>
                        <button class="btn btn-xs glyphicon tbl-btn" onclick="OnExtendResource(this, '@item.Id', '@item.SubscriptionId')"
                                data-toggle="tooltip" , title="Extend expiration date by a short period of time. See subscription settings.">
                            <img src="~/Images/extend.svg">
                        </button>
                        <button class="btn btn-xs glyphicon -btn" onclick="OnReserveResource(this, '@item.Id', '@item.SubscriptionId')"
                                data-toggle="tooltip" , title="Extend expiration date by a long period of time. See subscription settings.">
                            <img src="~/Images/reserve.svg" />
                        </button>
                        @if (Model.SubscriptionData.ConnectedBy == User.Identity.Name)
                        {
                            <button class="btn btn-xs glyphicon btn" onclick="OnResetResource(this, '@item.Id', '@item.SubscriptionId')"
                                    data-toggle="tooltip" , title="Reset expiration date making resource unclaimed.">
                                <img src="~/Images/reset.svg" />
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!--</div>
        </div>
    -->

    <div id="descriptionDialog" class="modal fade">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Resource description</h4>
                </div>
                <div class="modal-body">
                    <table>
                        <tr style="display:none">
                            <td colspan="3"><div id="resourceId"></div></td>
                        </tr>
                        <tr>
                            <td>Name</td>
                            <td width="5px" />
                            <td id="resourceName"></td>
                        </tr>
                        <tr>
                            <td style="vertical-align:top;text-align:justify;white-space:normal;margin:5px">Description</td>
                            <td width="5px" />
                            <td style="padding:0px;vertical-align:top;text-align:left"><textarea id="resourceDescription" style="text-align:left;vertical-align:top;margin:5px;width:500px;height:250px;"></textarea></td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="OnSaveDescription()">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>
    <div id="resetRessConfDialog" class="modal fade">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Reset Resources</h4>
                </div>
                <div class="modal-body">
                    <div>This will reset the expiration date and ownership information for all the resources.</div>
                    <br />
                    <div style="text-align:center">Are you sure?</div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="OnResetResourcesImpl()">Yes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                </div>

            </div>
        </div>
